COMPILER	?= /opt/llvm/bin/clang
LINKER		?= /opt/llvm/bin/lld-link
CC		= $(CROSS_COMPILE)$(COMPILER)
LD		= $(CROSS_COMPILE)$(LINKER)
OPENSSL		?= openssl
HEXDUMP		?= hexdump
INSTALL		?= install
PK12UTIL	?= pk12util
CERTUTIL	?= certutil
PESIGN		?= pesign
SBSIGN		?= sbsign
prefix		?= /usr
prefix		:= $(abspath $(prefix))
datadir		?= $(prefix)/share/
PKGNAME		?= shim
ESPROOTDIR	?= boot/efi/
EFIBOOTDIR	?= $(ESPROOTDIR)EFI/BOOT/
TARGETDIR	?= $(ESPROOTDIR)EFI/$(EFIDIR)/
DEBUGINFO	?= $(prefix)/lib/debug/
DEBUGSOURCE	?= $(prefix)/src/debug/
DEBUG		?= no
OSLABEL		?= $(EFIDIR)
DASHJ		?= -j$(shell echo $$(($$(grep -c "^model name" /proc/cpuinfo) + 1)))

ARCH		?= $(shell $(CC) -dumpmachine | cut -f1 -d- | sed s,i[3456789]86,ia32,)

SUBDIRS		= $(TOPDIR)/Cryptlib $(TOPDIR)/lib

CLANG_BUGS	= $(if $(findstring gcc,$(CC)),-maccumulate-outgoing-args,)

COMMIT_ID ?= $(shell if [ -e .git ] ; then git log -1 --pretty=format:%H ; elif [ -f commit ]; then cat commit ; else echo master; fi)

ifeq ($(DEBUG),yes)
DEBUG_CFLAGS	= -g -O0
DEBUG_LDFLAGS	= /debug
else
DEBUG_CFLAGS	= -Os
DEBUG_LDFLAGS	=
endif

ifeq ($(ARCH),x86_64)
	ARCH_EFI		?= X64
	ARCH_CFLAGS		?= -mno-red-zone -nostdinc \
				   $(CLANG_BUGS) -mno-stack-arg-probe -m64 \
				   -DPAGE_SIZE=4096 \
				   -target x86_64-windows-gnu
	LIBDIR			?= $(prefix)/lib64
	ARCH_SUFFIX		?= x64
	ARCH_SUFFIX_UPPER	?= X64
	ARCH_LDFLAGS		?= /machine:x64
	ifneq ($(DEBUG),yes)
		DEBUG_CFLAGS	+= -momit-leaf-frame-pointer
	endif
endif
ifeq ($(ARCH),ia32)
	ARCH_EFI		?= Ia32
	ARCH_CFLAGS		?= -mno-mmx -mno-sse -mno-red-zone -nostdinc \
				   $(CLANG_BUGS) -mno-stack-arg-probe -m32 \
				   -DPAGE_SIZE=4096 \
				   -mregparm=3 -mrtd -march=i586 -target i586-windows-gnu
	LIBDIR			?= $(prefix)/lib
	ARCH_SUFFIX		?= ia32
	ARCH_SUFFIX_UPPER	?= IA32
	ARCH_LDFLAGS		?= /machine:x86
	ARCH_CFLAGS		?= -m32
	ifneq ($(DEBUG),yes)
		DEBUG_CFLAGS	+= -momit-leaf-frame-pointer
	endif
endif
ifeq ($(ARCH),aarch64)
	ARCH_EFI		?= AArch64
	ARCH_CFLAGS		?= -DPAGE_SIZE=4096 -mstrict-align	\
				   -mno-stack-arg-probe	\
				   -target aarch64-windows-gnu
	LIBDIR			?= $(prefix)/lib64
	ARCH_SUFFIX		?= aa64
	ARCH_SUFFIX_UPPER	?= AA64
	ARCH_LDFLAGS		+= /machine:arm64
	ARCH_CFLAGS		?=
endif
ifeq ($(ARCH),arm)
	ARCH_EFI		?= Arm
	ARCH_CFLAGS		?= -DPAGE_SIZE=4096 -mstrict-align	\
				   -mno-stack-arg-probe \
				   -target arm-windows-gnu
	LIBDIR			?= $(prefix)/lib
	ARCH_SUFFIX		?= arm
	ARCH_SUFFIX_UPPER	?= ARM
	ARCH_LDFLAGS		+= /machine:arm
endif

DATATARGETDIR	?= $(datadir)/$(PKGNAME)/$(VERSION)$(DASHRELEASE)/$(ARCH_SUFFIX)/
DEFAULT_LOADER	?= \\\\grub$(ARCH_SUFFIX).efi

EFI_INCLUDE	?= $(TOPDIR)/Edk2
EFI_INCLUDES	= -nostdinc -I$(TOPDIR)/Cryptlib -I$(TOPDIR)/Cryptlib/Include \
		  -I$(EFI_INCLUDE) -I$(EFI_INCLUDE)/$(ARCH_EFI) \
		  -I$(TOPDIR)/include -iquote $(TOPDIR) -iquote $(shell pwd)

CFLAGS		= $(DEBUG_CFLAGS) -fno-stack-protector -fshort-wchar	\
		  -fno-strict-aliasing -Wall -Wsign-compare -Werror	\
		  -fno-builtin -UWIN32 -U_WIN32 -U__CYGWIN__		\
		  -ffunction-sections -fdata-sections -std=gnu89	\
		  -Werror=sign-compare -ffreestanding $(EFI_INCLUDES)	\
		  -I$(shell $(CC) $(ARCH_CFLAGS) -print-file-name=include) \
		  -integrated-as "-DDEFAULT_LOADER=L\"$(DEFAULT_LOADER)\"" \
		  "-DDEFAULT_LOADER_CHAR=\"$(DEFAULT_LOADER)\"" \
		  $(ARCH_CFLAGS)

ifneq ($(origin OVERRIDE_SECURITY_POLICY), undefined)
	CFLAGS	+= -DOVERRIDE_SECURITY_POLICY
endif

ifneq ($(origin ENABLE_HTTPBOOT), undefined)
	CFLAGS	+= -DENABLE_HTTPBOOT
endif

ifneq ($(origin REQUIRE_TPM), undefined)
	CFLAGS  += -DREQUIRE_TPM
endif

LIB_GCC		=
EFI_LIBS	= Cryptlib/libcryptlib.a Cryptlib/OpenSSL/libopenssl.a $(LIB_GCC)

MMSTEM		?= mm$(ARCH_SUFFIX)
MMNAME		= $(MMSTEM).efi
MMSONAME	= $(MMSTEM).dll
FBSTEM		?= fb$(ARCH_SUFFIX)
FBNAME		= $(FBSTEM).efi
FBSONAME	= $(FBSTEM).dll
SHIMSTEM	?= shim$(ARCH_SUFFIX)
SHIMNAME	= $(SHIMSTEM).efi
SHIMSONAME	= $(SHIMSTEM).dll
SHIMHASHNAME	= $(SHIMSTEM).hash
BOOTEFINAME	?= BOOT$(ARCH_SUFFIX_UPPER).EFI
BOOTCSVNAME	?= BOOT$(ARCH_SUFFIX_UPPER).CSV

CFLAGS += "-DEFI_ARCH=L\"$(ARCH_SUFFIX)\"" "-DDEBUGDIR=L\"/usr/lib/debug/usr/share/shim/$(ARCH_SUFFIX)-$(VERSION)$(DASHRELEASE)/\""

ifneq ($(origin VENDOR_CERT_FILE), undefined)
	CFLAGS += -DVENDOR_CERT_FILE=\"$(VENDOR_CERT_FILE)\"
endif
ifneq ($(origin VENDOR_DBX_FILE), undefined)
	CFLAGS += -DVENDOR_DBX_FILE=\"$(VENDOR_DBX_FILE)\"
endif

LDFLAGS		= $(DEBUG_LDFLAGS) /dll /entry:efi_main /nodefaultlib $(ARCH_LDFLAGS)
